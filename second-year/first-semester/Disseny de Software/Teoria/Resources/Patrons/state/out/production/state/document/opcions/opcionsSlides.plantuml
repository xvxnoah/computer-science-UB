@startuml

title __OPCIONS's Class Diagram__\n

  namespace document.opcions {
    enum Actions {
      Approved
      Publish
      ReviewFailed
    }
  }
  

  namespace document.opcions {
    class document.opcions.Document {
        ~ data : Date
        ~ title : String
        + Document()
        + toString()
        + update()
    }
  }
  

  namespace document.opcions {
    class document.opcions.DocumentTestDrive {
        {static} + main()
    }
  }
  

  namespace document.opcions {
    enum Rol {
      Admin
      User
    }
  }
  

  namespace document.opcions {
    enum StatesDocument {
      Draft
      Moderation
      Published
    }
  }
  

  document.opcions.Document o-- document.opcions.StatesDocument : currentState
document.opcions.DocumentTestDrive o-down- document.opcions.StatesDocument : uses
document.opcions.DocumentTestDrive o-down- document.opcions.Actions : uses
document.opcions.DocumentTestDrive o-down- document.opcions.Rol : uses
document.opcions.DocumentTestDrive -right-> document.opcions.Document : uses

note right of document.opcions.Document
    StatesDocument currentState;
    Date data;
    String title;

    public Document(String title, Date data) {
        this.title = title;
        this.data = data;
        this.currentState = StatesDocument.Draft;
    }

    public void update(Rol role, Actions action ) {
        System.out.println("The role: "+role + " is doing "+action);
        switch (currentState) {
            case Draft:
                if (action == Actions.Publish) {
                    if (role == Rol.User)
                        currentState = StatesDocument.Moderation;
                    else if (role == Rol.Admin)
                        currentState = StatesDocument.Published;
                }
                break;
            case Moderation:
                if (role == Rol.Admin) {
                    if (action == Actions.Approved)
                        currentState = StatesDocument.Published;
                    else if (action == Actions.ReviewFailed)
                        currentState = StatesDocument.Draft;
                }
                break;
            case Published:
                Calendar obj = Calendar.getInstance();
                Date currentDate = obj.getTime();
                System.out.println("Current Date and time: "+currentDate);
                if (data.after(currentDate)) {
                    currentState = StatesDocument.Draft;
                }
                break;
        }
    }
end note


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
