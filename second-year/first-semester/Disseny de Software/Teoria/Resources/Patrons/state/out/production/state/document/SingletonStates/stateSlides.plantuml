@startuml

title SINGLETON's Class Diagram__\n

  namespace document.singletonstates {
    enum Actions {
      Approved
      Publish
      ReviewFailed
    }
  }
  

  namespace document.singletonstates {
    class document.singletonstates.Document {
        ~ data : Date
        ~ title : String
        + Document()
        + changeState()
        + render()
        + toString()
        + update()
    }
  }
  

  namespace document.singletonstates {
    class document.singletonstates.DocumentTestDrive {
        {static} + main()
    }
  }
  

  namespace document.singletonstates {
    class document.singletonstates.DraftState {
        + DraftState()
        + setDocument()
        + render()
        + update()
    }
  }
  

  namespace document.singletonstates {
    class document.singletonstates.ModerationState {
        + ModerationState()
        + setDocument()
        + render()
        + update()
    }
  }
  

  namespace document.singletonstates {
    class document.singletonstates.PublishedState {
        + PublishedState()
        + setDocument()
        + render()
        + update()
    }
  }
  

  namespace document.singletonstates {
    enum Rol {
      Admin
      User
    }
  }
  

  namespace document.singletonstates {
    abstract class document.singletonstates.State {
        {abstract} + setDocument()
        {abstract} + render()
        {abstract} + update()
    }
  }
  

  document.singletonstates.Document o-up- document.singletonstates.State : currentState
  document.singletonstates.DraftState .down.|> document.singletonstates.State
  document.singletonstates.DraftState o-- document.singletonstates.Document : doc
  document.singletonstates.ModerationState .down.|> document.singletonstates.State
  document.singletonstates.ModerationState o-- document.singletonstates.Document : doc
  document.singletonstates.PublishedState .down.|> document.singletonstates.State
  document.singletonstates.PublishedState o-- document.singletonstates.Document : doc
document.singletonstates.DocumentTestDrive -right->document.singletonstates.Document: uses
document.singletonstates.Document o-right- document.singletonstates.Rol :uses
document.singletonstates.Document o-down- document.singletonstates.Actions :uses

note left of document.singletonstates.Document
    public class Document {
        State currentState;
        Date data;
        String title;

        public Document(String title, Date data) {
            this.title = title;
            this.data = data;
        }

        public void update(Rol role, Actions action ) {
            currentState.update(role, action);
        }
        public void changeState(State state) {
            currentState = state;
            currentState.setDocument(this);
        }
        public void render() {
           System.out.println(this);
           currentState.render();
        }
        public String toString() {
            return "The document: "+ this.title + " is in " ;
        }
    }
end note

note left of document.singletonstates.DraftState
    public class DraftState extends State {

        private static State state;
        private DraftState() {
        }

        protected static State getInstance() {
            if (state==null) {
                state = new DraftState();
            }
            return state;
        }

        @Override
        public void render() {
            System.out.println("Draft");
        }

        @Override
        public void update(Rol role, Actions action) {
            if (role == Rol.User)
                doc.changeState( ModerationState.getInstance());
            else if (role == Rol.Admin)
                doc.changeState( PublishedState.getInstance());
        }
    }

end note
note left of document.singletonstates.State
    public abstract class State {

    	protected Document doc;

    	public void setDocument(Document doc) {
    		this.doc = doc;
    	}

    	abstract public void render();
    	abstract public void update(Rol rol, Actions action);
    }

end note

note bottom of document.singletonstates.DocumentTestDrive
public static void main(String[] args) {
        ...
       date = formatter.parse(date_string);
       doc = new Document("Prova de canvis d'estat", date);
       doc.changeState(DraftState.getInstance());
       doc.render();
       doc.update(Rol.User, Actions.Publish);
       ....
end note
right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
