@startuml

title __VEHICLESSENSEFACTORY's Class Diagram__\n

  namespace vehiclesSenseFactory {
    class vehiclesSenseFactory.Car {
        + Car()
        + drive()
    }
  }
  

  namespace vehiclesSenseFactory {
    class vehiclesSenseFactory.TestDrive {
        {static} + main()
    }
  }
  

  namespace vehiclesSenseFactory {
    class vehiclesSenseFactory.Truck {
        + Truck()
        + drive()
    }
  }
  

  namespace vehiclesSenseFactory {
    interface vehiclesSenseFactory.Vehicle {
        {abstract} + drive()
    }
  }
  

  

  vehiclesSenseFactory.Car .up.|> vehiclesSenseFactory.Vehicle
  vehiclesSenseFactory.Truck .up.|> vehiclesSenseFactory.Vehicle

vehiclesSenseFactory.TestDrive -left-> vehiclesSenseFactory.Vehicle: uses
note left of vehiclesSenseFactory.TestDrive
public class TestDrive {
    public static void main(String[] args) {

        System.out.println("Quin tipus de vehicle vols?");

        String name;
        Scanner teclado = new Scanner(System.in);
        name = teclado.nextLine();
        Vehicle vehicle = null;

        switch (name) {
            case "CAR":
                vehicle = new Car();
                break;
            case "TRUCK":
                vehicle = new Truck();
                break;
        }
        vehicle.drive();

    }
}
end note

right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
