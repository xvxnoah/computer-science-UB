@startuml

title __VEHICLESSENSEFACTORYSTATIC's Class Diagram__\n

  namespace vehiclesSenseFactoryStatic {

      class vehiclesSenseFactoryStatic.Car {
          + Car()
          + drive()
      }

  }
  

  namespace vehiclesSenseFactoryStatic {

      class vehiclesSenseFactoryStatic.TestDrive {
          {static} + main()
      }

  }
  

  namespace vehiclesSenseFactoryStatic {

      class vehiclesSenseFactoryStatic.Truck {
          + Truck()
          + drive()
      }

  }
  

  namespace vehiclesSenseFactoryStatic {

      abstract class vehiclesSenseFactoryStatic.Vehicle {
          + static createVehicle()
          + {abstract} drive()
      }

  }
  

  namespace vehiclesSenseFactoryStatic {

      enum VehicleTypes {
        Car
        Truck

    }
  }
  note left of vehiclesSenseFactoryStatic.Vehicle
  public static Vehicle createVehicle (VehicleTypes name) {
  		Vehicle vehicle = null;
  		switch (name) {
  			case Car:
  				vehicle = new Car();
  				break;
  			case Truck:
  				vehicle = new Truck();
  				break;
  		}
  		return vehicle;

  	}
  	public abstract void drive();
  	end note

  vehiclesSenseFactoryStatic.Car -up-|> vehiclesSenseFactoryStatic.Vehicle
  vehiclesSenseFactoryStatic.Truck -up-|> vehiclesSenseFactoryStatic.Vehicle
vehiclesSenseFactoryStatic.Vehicle <- vehiclesSenseFactoryStatic.TestDrive: <<uses
vehiclesSenseFactoryStatic.Vehicle -> vehiclesSenseFactoryStatic.VehicleTypes: uses
vehiclesSenseFactoryStatic.TestDrive -right-> vehiclesSenseFactoryStatic.VehicleTypes: uses




right footer
PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
