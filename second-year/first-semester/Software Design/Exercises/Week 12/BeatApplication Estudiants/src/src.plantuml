@startuml

title __SRC's Class Diagram__\n

  package  {
    interface BPMObserver {
        {abstract} + updateBPM()
    }
  }
  

  package  {
    class BeatBar {
        {static} - serialVersionUID : long
        ~ progressBar : JProgressBar
        ~ thread : Thread
        + BeatBar()
        + run()
    }
  }
  

  package  {
    class AccessibleJProgressBar {
        # AccessibleJProgressBar()
        + getAccessibleStateSet()
        + getAccessibleRole()
        + getAccessibleValue()
        + getCurrentAccessibleValue()
        + setCurrentAccessibleValue()
        + getMinimumAccessibleValue()
        + getMaximumAccessibleValue()
    }
  }
  

  package  {
    class AccessibleFocusHandler {
        # AccessibleFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class ModelListener {
        - ModelListener()
        + stateChanged()
    }
  }
  

  package  {
    class ReadObjectCallback {
        - roots : Vector<JComponent>
        - inputStream : ObjectInputStream
        ~ ReadObjectCallback()
        + validateObject()
        - registerComponent()
    }
  }
  

  package  {
    abstract class AccessibleJComponent {
        - propertyListenersCount : int
        # accessibleFocusHandler : FocusListener
        # AccessibleJComponent()
        + addPropertyChangeListener()
        + removePropertyChangeListener()
        # getBorderTitle()
        + getAccessibleName()
        + getAccessibleDescription()
        + getAccessibleRole()
        + getAccessibleStateSet()
        + getAccessibleChildrenCount()
        + getAccessibleChild()
        ~ getAccessibleExtendedComponent()
        + getToolTipText()
        + getTitledBorderText()
        + getAccessibleKeyBinding()
    }
  }
  

  package  {
    class AccessibleFocusHandler {
        # AccessibleFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class KeyboardState {
        {static} - keyCodesKey : Object
        ~ KeyboardState()
        {static} ~ getKeyCodeArray()
        {static} ~ registerKeyPressed()
        {static} ~ registerKeyReleased()
        {static} ~ keyIsPressed()
        {static} ~ shouldProcess()
    }
  }
  

  package  {
    class IntVector {
        ~ array : int[]
        ~ count : int
        ~ capacity : int
        ~ IntVector()
        ~ size()
        ~ elementAt()
        ~ addElement()
        ~ setElementAt()
    }
  }
  

  package  {
    class ActionStandin {
        - actionListener : ActionListener
        - command : String
        - action : Action
        ~ ActionStandin()
        + getValue()
        + isEnabled()
        + actionPerformed()
        + putValue()
        + setEnabled()
        + addPropertyChangeListener()
        + removePropertyChangeListener()
    }
  }
  

  package  {
    class AccessibleAWTContainer {
        {static} - serialVersionUID : long
        - propertyListenersCount : int
        # accessibleContainerHandler : ContainerListener
        # AccessibleAWTContainer()
        + getAccessibleChildrenCount()
        + getAccessibleChild()
        + getAccessibleAt()
        + addPropertyChangeListener()
        + removePropertyChangeListener()
    }
  }
  

  package  {
    class AccessibleContainerHandler {
        # AccessibleContainerHandler()
        + componentAdded()
        + componentRemoved()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class WakingRunnable {
        ~ WakingRunnable()
        + run()
    }
  }
  

  package  {
    class DropTargetEventTargetFilter {
        {static} ~ FILTER : EventTargetFilter
        - DropTargetEventTargetFilter()
        + accept()
    }
  }
  

  package  {
    class MouseEventTargetFilter {
        {static} ~ FILTER : EventTargetFilter
        - MouseEventTargetFilter()
        + accept()
    }
  }
  

  package  {
    interface EventTargetFilter {
        {abstract} + accept()
    }
  }
  

  package  {
    abstract class AccessibleAWTComponent {
        {static} - serialVersionUID : long
        - propertyListenersCount : int
        # accessibleAWTComponentHandler : ComponentListener
        # accessibleAWTFocusHandler : FocusListener
        # AccessibleAWTComponent()
        + addPropertyChangeListener()
        + removePropertyChangeListener()
        + getAccessibleName()
        + getAccessibleDescription()
        + getAccessibleRole()
        + getAccessibleStateSet()
        + getAccessibleParent()
        + getAccessibleIndexInParent()
        + getAccessibleChildrenCount()
        + getAccessibleChild()
        + getLocale()
        + getAccessibleComponent()
        + getBackground()
        + setBackground()
        + getForeground()
        + setForeground()
        + getCursor()
        + setCursor()
        + getFont()
        + setFont()
        + getFontMetrics()
        + isEnabled()
        + setEnabled()
        + isVisible()
        + setVisible()
        + isShowing()
        + contains()
        + getLocationOnScreen()
        + getLocation()
        + setLocation()
        + getBounds()
        + setBounds()
        + getSize()
        + setSize()
        + getAccessibleAt()
        + isFocusTraversable()
        + requestFocus()
        + addFocusListener()
        + removeFocusListener()
    }
  }
  

  package  {
    class AccessibleAWTFocusHandler {
        # AccessibleAWTFocusHandler()
        + focusGained()
        + focusLost()
    }
  }
  

  package  {
    class AccessibleAWTComponentHandler {
        # AccessibleAWTComponentHandler()
        + componentHidden()
        + componentShown()
        + componentMoved()
        + componentResized()
    }
  }
  

  package  {
    class DummyRequestFocusController {
        - DummyRequestFocusController()
        + acceptRequestFocus()
    }
  }
  

  package  {
    class SingleBufferStrategy {
        - caps : BufferCapabilities
        + SingleBufferStrategy()
        + getCapabilities()
        + getDrawGraphics()
        + contentsLost()
        + contentsRestored()
        + show()
    }
  }
  

  package  {
    class BltSubRegionBufferStrategy {
        # BltSubRegionBufferStrategy()
        + show()
        + showIfNotLost()
    }
  }
  

  package  {
    class FlipSubRegionBufferStrategy {
        # FlipSubRegionBufferStrategy()
        + show()
        + showIfNotLost()
    }
  }
  

  package  {
    class BltBufferStrategy {
        # caps : BufferCapabilities
        # backBuffers : VolatileImage[]
        # validatedContents : boolean
        # width : int
        # height : int
        - insets : Insets
        # BltBufferStrategy()
        + dispose()
        # createBackBuffers()
        + getCapabilities()
        + getDrawGraphics()
        ~ getBackBuffer()
        + show()
        ~ showSubRegion()
        # revalidate()
        ~ revalidate()
        + contentsLost()
        + contentsRestored()
    }
  }
  

  package  {
    class FlipBufferStrategy {
        # numBuffers : int
        # caps : BufferCapabilities
        # drawBuffer : Image
        # drawVBuffer : VolatileImage
        # validatedContents : boolean
        ~ width : int
        ~ height : int
        # FlipBufferStrategy()
        # createBuffers()
        - updateInternalBuffers()
        # getBackBuffer()
        # flip()
        ~ flipSubRegion()
        # destroyBuffers()
        + getCapabilities()
        + getDrawGraphics()
        # revalidate()
        ~ revalidate()
        + contentsLost()
        + contentsRestored()
        + show()
        ~ showSubRegion()
        + dispose()
    }
  }
  

  package  {
    class ProxyCapabilities {
        - orig : BufferCapabilities
        - ProxyCapabilities()
    }
  }
  

  package  {
    enum VSyncType {
      VSYNC_DEFAULT
      VSYNC_ON
      VSYNC_OFF
      id
    }
  }
  

  package  {
    class FlipContents {
        {static} - I_UNDEFINED : int
        {static} - I_BACKGROUND : int
        {static} - I_PRIOR : int
        {static} - I_COPIED : int
        {static} - NAMES : String[]
        {static} + UNDEFINED : FlipContents
        {static} + BACKGROUND : FlipContents
        {static} + PRIOR : FlipContents
        {static} + COPIED : FlipContents
        - FlipContents()
    }
  }
  

  package  {
    enum BaselineResizeBehavior {
      CONSTANT_ASCENT
      CONSTANT_DESCENT
      CENTER_OFFSET
      OTHER
    }
  }
  

  package  {
    class AWTTreeLock {
        ~ AWTTreeLock()
    }
  }
  

  package  {
    class BeatController {
        + BeatController()
        + start()
        + stop()
        + increaseBPM()
        + decreaseBPM()
        + setBPM()
    }
  }
  

  package  {
    class BeatModel {
        ~ sequencer : Sequencer
        ~ beatObservers : ArrayList<BeatObserver>
        ~ bpmObservers : ArrayList<BPMObserver>
        ~ bpm : int
        ~ sequence : Sequence
        ~ track : Track
        + initialize()
        + on()
        + off()
        + setBPM()
        + getBPM()
        ~ beatEvent()
        + registerObserver()
        + notifyBeatObservers()
        + registerObserver()
        + notifyBPMObservers()
        + removeObserver()
        + removeObserver()
        + meta()
        + setUpMidi()
        + buildTrackAndStart()
        + makeTracks()
        + makeEvent()
    }
  }
  

  package  {
    interface BeatModelInterface {
        {abstract} + initialize()
        {abstract} + on()
        {abstract} + off()
        {abstract} + setBPM()
        {abstract} + getBPM()
        {abstract} + registerObserver()
        {abstract} + removeObserver()
        {abstract} + registerObserver()
        {abstract} + removeObserver()
    }
  }
  

  package  {
    interface BeatObserver {
        {abstract} + updateBeat()
    }
  }
  

  package  {
    interface ControllerInterface {
        {abstract} + start()
        {abstract} + stop()
        {abstract} + increaseBPM()
        {abstract} + decreaseBPM()
        {abstract} + setBPM()
    }
  }
  

  package  {
    class DJTestDrive {
        {static} + main()
    }
  }
  

  package  {
    class DJView {
        ~ viewFrame : JFrame
        ~ viewPanel : JPanel
        ~ bpmOutputLabel : JLabel
        ~ controlFrame : JFrame
        ~ controlPanel : JPanel
        ~ bpmLabel : JLabel
        ~ bpmTextField : JTextField
        ~ setBPMButton : JButton
        ~ increaseBPMButton : JButton
        ~ decreaseBPMButton : JButton
        ~ menuBar : JMenuBar
        ~ menu : JMenu
        ~ startMenuItem : JMenuItem
        ~ stopMenuItem : JMenuItem
        + DJView()
        + createView()
        + createControls()
        + enableStopMenuItem()
        + disableStopMenuItem()
        + enableStartMenuItem()
        + disableStartMenuItem()
        + actionPerformed()
        + updateBPM()
        + updateBeat()
    }
  }
  

  BeatBar -up-|> Runnable
  BeatBar -up-|> JProgressBar
  BeatBar +-down- AccessibleJProgressBar
  BeatBar +-down- ModelListener
  BeatBar +-down- ReadObjectCallback
  BeatBar +-down- AccessibleJComponent
  BeatBar +-down- KeyboardState
  BeatBar +-down- IntVector
  BeatBar +-down- ActionStandin
  BeatBar +-down- AccessibleAWTContainer
  BeatBar +-down- WakingRunnable
  BeatBar +-down- DropTargetEventTargetFilter
  BeatBar +-down- MouseEventTargetFilter
  BeatBar +-down- EventTargetFilter
  BeatBar +-down- AccessibleAWTComponent
  BeatBar +-down- DummyRequestFocusController
  BeatBar +-down- SingleBufferStrategy
  BeatBar +-down- BltSubRegionBufferStrategy
  BeatBar +-down- FlipSubRegionBufferStrategy
  BeatBar +-down- BltBufferStrategy
  BeatBar +-down- FlipBufferStrategy
  BeatBar +-down- ProxyCapabilities
  BeatBar +-down- BaselineResizeBehavior
  BeatBar +-down- AWTTreeLock
  AccessibleJProgressBar -up-|> AccessibleValue
  AccessibleJProgressBar -up-|> AccessibleJComponent
  AccessibleJProgressBar +-down- AccessibleFocusHandler
  AccessibleJProgressBar +-down- AccessibleContainerHandler
  AccessibleJProgressBar +-down- AccessibleContainerHandler
  AccessibleJProgressBar +-down- AccessibleAWTFocusHandler
  AccessibleJProgressBar +-down- AccessibleAWTComponentHandler
  AccessibleFocusHandler -up-|> FocusListener
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  ModelListener -up-|> ChangeListener
  ModelListener -up-|> Serializable
  ReadObjectCallback -up-|> ObjectInputValidation
  AccessibleJComponent -up-|> AccessibleExtendedComponent
  AccessibleJComponent -up-|> AccessibleAWTContainer
  AccessibleJComponent +-down- AccessibleFocusHandler
  AccessibleJComponent +-down- AccessibleContainerHandler
  AccessibleJComponent +-down- AccessibleContainerHandler
  AccessibleJComponent +-down- AccessibleAWTFocusHandler
  AccessibleJComponent +-down- AccessibleAWTComponentHandler
  AccessibleFocusHandler -up-|> FocusListener
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  KeyboardState -up-|> Serializable
  ActionStandin -up-|> Action
  AccessibleAWTContainer -up-|> AccessibleAWTComponent
  AccessibleAWTContainer +-down- AccessibleContainerHandler
  AccessibleAWTContainer +-down- AccessibleAWTFocusHandler
  AccessibleAWTContainer +-down- AccessibleAWTComponentHandler
  AccessibleContainerHandler -up-|> ContainerListener
  AccessibleAWTFocusHandler -up-|> FocusListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  WakingRunnable -up-|> Runnable
  DropTargetEventTargetFilter -up-|> EventTargetFilter
  MouseEventTargetFilter -up-|> EventTargetFilter
  AccessibleAWTComponent -up-|> Serializable
  AccessibleAWTComponent -up-|> AccessibleComponent
  AccessibleAWTComponent -up-|> AccessibleContext
  AccessibleAWTComponent +-down- AccessibleAWTFocusHandler
  AccessibleAWTComponent +-down- AccessibleAWTComponentHandler
  AccessibleAWTFocusHandler -up-|> FocusListener
  AccessibleAWTComponentHandler -up-|> ComponentListener
  DummyRequestFocusController -up-|> RequestFocusController
  SingleBufferStrategy -up-|> BufferStrategy
  BltSubRegionBufferStrategy -up-|> SubRegionShowable
  BltSubRegionBufferStrategy -up-|> BltBufferStrategy
  FlipSubRegionBufferStrategy -up-|> SubRegionShowable
  FlipSubRegionBufferStrategy -up-|> FlipBufferStrategy
  BltBufferStrategy -up-|> BufferStrategy
  FlipBufferStrategy -up-|> BufferStrategy
  ProxyCapabilities -up-|> ExtendedBufferCapabilities
  ProxyCapabilities +-down- VSyncType
  ProxyCapabilities +-down- FlipContents
  FlipContents -up-|> AttributeValue
  BeatController -up-|> ControllerInterface
  BeatController o-- BeatModelInterface : model
  BeatController o-- DJView : view
  BeatModel -up-|> BeatModelInterface
  BeatModel -up-|> MetaEventListener
  DJView -up-|> ActionListener
  DJView -up-|> BeatObserver
  DJView -up-|> BPMObserver
  DJView o-- BeatModelInterface : model
  DJView o-- ControllerInterface : controller
  DJView o-- BeatBar : beatBar


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
